{"version":3,"sources":["holaluz-logo.svg","components/Portfolio/CoverPage/cover.page.title.jsx","components/Utils/hero.footer.link.jsx","components/Portfolio/CoverPage/cover.page.jsx","components/Portfolio/summary/summary.component.jsx","components/Portfolio/ProfessionalBackground/Card/card.component.jsx","components/Portfolio/ProfessionalBackground/contact.button.component/contact.button.component.jsx","components/Portfolio/ProfessionalBackground/cards.component.jsx","components/Portfolio/portfolio.component.jsx","App.js","serviceWorker.js","index.js","logo-multihelpers2.svg"],"names":["module","exports","CoverPageTitle","title","subtitle","className","HeroFooterLink","target","clickFunction","smooth","to","onClick","CoverPage","isVisible","Summary","id","CardComponent","logo","type","duration","content","src","alt","ContactButton","CardsComponent","visible","mhLogo","HLZLogo","PortfolioComponent","props","showSummary","setState","isSummaryVisible","Events","scrollEvent","register","isCoverPageVisible","showCards","areCardsVisible","state","this","React","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.dfd78b63.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/holaluz-logo.bd34f9ea.svg\";","import React from \"react\";\n\nconst CoverPageTitle = ({title, subtitle}) => (\n    <div>\n        <h1 className=\"title\">\n            {title}\n        </h1>\n        <h2 className=\"subtitle\">\n            {subtitle}\n        </h2>\n    </div>\n);\n\nexport default CoverPageTitle;","import * as React from \"react\";\nimport {Link} from \"react-scroll\";\n\nconst HeroFooterLink = ({target, clickFunction}) => {\n        return (\n                <Link smooth={true} to={target}>\n                    <div className=\"hero-foot\" onClick={clickFunction}>\n                        <section className=\"hero\">\n                            <div className=\"hero-body\">\n                                <div className=\"container has-text-centered\">\n                                    <p className=\"title\">\n                                        Who am I?\n                                    </p>\n                                </div>\n                            </div>\n                        </section>\n                    </div>\n                </Link>\n        );\n    };\n\nexport default HeroFooterLink;","import * as React from \"react\";\nimport './header.styles.css';\nimport CoverPageTitle from \"./cover.page.title\";\nimport HeroFooterLink from \"../../Utils/hero.footer.link\";\n\nconst CoverPage = ({title, subtitle, target, clickFunction, isVisible}) => (\n    isVisible &&\n    <section className=\"hero is-success is-fullheight\">\n        <div className=\"hero-body\">\n            <div className=\"container has-text-centered\">\n                <CoverPageTitle title={title} subtitle={subtitle}/>\n            </div>\n        </div>\n        <HeroFooterLink target={target} clickFunction={clickFunction}/>\n    </section>\n);\n\nexport default CoverPage;","import React from 'react';\nimport HeroFooterLink from \"../../Utils/hero.footer.link\";\n\nconst Summary = ({id, isVisible, target, clickFunction}) => (\n    <div id={id}>\n        {isVisible &&\n        <section className=\"hero is-primary is-fullheight is-bold\">\n            <div className=\"hero-body\">\n                <div className=\"container\">\n                    <p className=\"title\">\n                        Hey! I'm Diego.\n                    </p>\n                    <p className=\"is-size-3\">\n                        I'm (mainly) a <strong>backend developer</strong> who believes that things can really be\n                        done\n                        right. I'm a fan of\n                        terms like <strong>Clean Architecture</strong>, <strong>SOLID\n                        principles</strong>, <strong>agile</strong>... Trying to apply everything I know on a\n                        daily basis to improve both the product and myself.\n                    </p>\n                </div>\n            </div>\n            <HeroFooterLink target={target} clickFunction={clickFunction} />\n        </section>}\n    </div>\n);\n\nexport default Summary;","import * as React from \"react\";\n\nconst CardComponent = ({logo, title, type, duration, content}) => (\n    <div className=\"tile is-child box\">\n        <div className=\"columns is-centered\">\n            <div className=\"column is-three-quarters-tablet is-half-desktop \">\n                <div className=\"image is-3by1\">\n                    <img src={logo} alt=\"\"/>\n                </div>\n            </div>\n        </div>\n        <p className=\"title\">\n            {title} ({type})\n        </p>\n        <p className=\"subtitle\">\n            {duration}\n        </p>\n        <p className=\"content\">\n            {content}\n        </p>\n\n    </div>\n);\n\nexport default CardComponent;","import React from \"react\";\n\nconst ContactButton = () => (\n    <div className=\"tile is-child notification is-primary is-light\">\n        <p className=\" \">\n            Contact me!\n        </p>\n    </div>);\n\nexport default ContactButton;","import React from 'react';\nimport mhLogo from '../../../logo-multihelpers2.svg';\nimport HLZLogo from '../../../holaluz-logo.svg';\nimport CardComponent from \"./Card/card.component\";\nimport ContactButton from \"./contact.button.component/contact.button.component\";\n\nconst content = {\n    0: `Before finishing my degree, I started working at Multihelpers as a <strong>software developer</strong>. First contact with the \"real world\", realising that all of the knowledge acquired over 4 years of studying were only the basis of the real challenge: trying to do things right in a scenario of deadlines, constant requests...`,\n    1: `After finishing the Computer Science degree, I was hired by Multihelpers. Thanks to my mentor Javier, I started to get into the world of clean software architecture, SOLID principles, DDD... trying to implement them in a legacy scenario to ease maintainability and reach scalability`,\n    2: `I moved to <strong>Barcelona</strong> and I was hired by Holaluz, where I had the opportunity of being a part of an exceptional team. I was able to learn how a great company advocates doing things right, trying to maintain the quality of everything it does and also in an unbeatable work environment.`,\n    3: `For life's sake, I went back to Pamplona, and I thought the best place to work was Multihelpers. My goal: to try to apply everything I learned in this last stage in the first company that gave me the opportunity to grow professionally`\n};\n\nconst CardsComponent = ({id, visible}) => (\n    <div id={id}>\n        {visible && <section className=\"hero is-light is-fullheight\">\n            <div className=\"hero-body\">\n                <div className=\"tile is-ancestor\">\n                    <div className=\"tile is-vertical is-parent\">\n                        <CardComponent logo={mhLogo} title={\"Software Developer\"} type=\"Internship\"\n                                       duration=\"September 2017 - April 2018 (8 months)\"\n                                       content={content[0]}/>\n                        <CardComponent logo={mhLogo} title={\"Software Developer\"} type=\"Full-time\"\n                                       duration=\"April 2018 - May 2019 (1 year 2 months)\"\n                                       content={content[1]}/>\n                    </div>\n                    <div className=\"tile is-vertical is-parent\">\n                        <CardComponent logo={HLZLogo} title={\"Backend Developer\"} type=\"Full-time\"\n                                       duration=\"May 2019 - September 2019 (5 months)\"\n                                       content={content[2]}/>\n                        <CardComponent logo={mhLogo} title={\"Backend Team Leader\"} type=\"Full-time\"\n                                       duration=\"September 2019 - Present\"\n                                       content={content[3]}/>\n                        <ContactButton/>\n                    </div>\n                </div>\n            </div>\n        </section>}\n    </div>\n);\n\nexport default CardsComponent;","import * as React from \"react\";\nimport CoverPage from \"./CoverPage/cover.page\";\nimport Summary from \"./summary/summary.component\";\nimport CardsComponent from \"./ProfessionalBackground/cards.component\";\nimport {Events} from \"react-scroll\";\n\nclass PortfolioComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isCoverPageVisible: true,\n            isSummaryVisible: false,\n            areCardsVisible: false\n        }\n    }\n\n    showSummary = () => {\n        this.setState({\n            isSummaryVisible: true\n        });\n        Events.scrollEvent.register('end', () =>  {\n            this.setState({\n                isCoverPageVisible: false\n            });\n        });\n    };\n\n    showCards = () => {\n        this.setState({\n            areCardsVisible: true\n        });\n        Events.scrollEvent.register('end', () =>  {\n            this.setState({\n                isSummaryVisible: false\n            });\n        });\n    };\n\n    render() {\n        return (\n            <div>\n                <CoverPage isVisible={this.state.isCoverPageVisible} target={\"summary\"} title={\"Diego García\"} subtitle={\"Software Developer\"} clickFunction={this.showSummary}/>\n                <Summary id={\"summary\"} isVisible={this.state.isSummaryVisible} target={\"cards\"} clickFunction={this.showCards}/>\n                <CardsComponent id={\"cards\"} visible={this.state.areCardsVisible}/>\n            </div>\n        )\n    }\n}\n\nexport default PortfolioComponent;","import React from 'react';\nimport './App.sass';\nimport Header from \"./components/Portfolio/CoverPage/cover.page\";\nimport Summary from \"./components/Portfolio/summary/summary.component\";\nimport Portfolio from \"./components/Portfolio/portfolio.component\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Portfolio/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo-multihelpers2.1509d806.svg\";"],"sourceRoot":""}